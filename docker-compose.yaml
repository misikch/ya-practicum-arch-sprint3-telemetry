version: '3.7'

services:
#  app:
#    build: .
#    container_name: app
#    ports:
#      - 8082:8082
#    environment:
#      - SERVICE_PORT=8082
#      - MONGO_HOST=mongodb
#      - MONGO_PORT=27017
#      - MONGO_USER=mongo
#      - MONGO_PASSWORD=mongo
#      - MONGO_DATABASE=telemetry
#      - KAFKA_BROKER=kafka:9092
#      - KAFKA_TOPIC=my_topic_1
#    depends_on:
#      - mongodb
#      - kafka
#    deploy:
#      replicas: 2
#      restart_policy:
#        condition: on-failure

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    ports:
      - 27017:27017
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    command: >
      sh -c "
        /opt/bitnami/scripts/kafka/run.sh &
        sleep 5;
        kafka-topics.sh --create --topic my_topic_1 --partitions 1 --replication-factor 1 --bootstrap-server localhost:9092;
        kafka-topics.sh --create --topic my_topic_2 --partitions 2 --replication-factor 1 --bootstrap-server localhost:9092;
        kafka-topics.sh --create --topic my_topic_3 --partitions 3 --replication-factor 1 --bootstrap-server localhost:9092;
        wait"